.page {
  width: 600px;
  margin: 0 auto; /* centers*/
}

.page > p:first-of-type {
  color: #7E8184;
  font-style: italic;
}

/* “descendant selectors”. They let you target only those elements that are inside of another element */
.page > p:first-of-type {
  color: #7E8184;
  font-style: italic;
}

.button:link,                 /* Change this */
.button:visited {             /* Change this */
  display: block;             /* Add this */
  text-decoration: none;      /* Add this */

  color: #FFF;                /* The rest is the same */
  background-color: #5995DA;
  font-weight: bold;
  padding: 20px;
  text-align: center;
  border: 2px solid #5D6063;
  border-radius: 5px;

  width: 200px;
  margin: 20px auto;
}

.button:hover,
.button:visited:hover {
  color: #FFF;
  background-color: #76AEED;  /* Light blue */
}

.button:active,
.button:visited:active {
  color: #FFF;
  background-color: #5995DA;  /* Blue */
}

/* When there’s two conflicting properties in a CSS file, the last one is always the one that gets applied */
/* ALso, psudo selectors are more specific and will override class selectors*/
.call-to-action:link,
.call-to-action:visited {
  font-style: italic;
  background-color: #EEB75A;     /* Yellow */
}

.call-to-action:hover,
.call-to-action:visited:hover {
  background-color: #F5CF8E;     /* Light yellow */
}

.call-to-action:active,
.call-to-action:visited:active {
  background-color: #EEB75A;     /* Yellow */
}

#button-2 {
  color: #5D6063;  /* Dark gray */
}

a:link {
  color: blue;
  text-decoration: none;
}

a:visited {
  color: purple;
}

a:hover {
  color: aqua;
  text-decoration: underline;
}

a:active {
  color: red;
}

a:visited:hover {
  color: orange;
}

a:visited:active {
  color: red;
}

p:last-of-type {
  margin-bottom: 50px;
}

li {
  list-style-type: disc;
}

/* Descendant selector - The descendant combinator — typically represented by a single space ( ) character — combines two
selectors such that elements matched by the second selector are selected if they have an ancestor element
matching the first selector.  */
li li {
  list-style-type: circle;
}
/*The adjacent sibling combinator (+) separates two selectors and
matches the second element only if it immediately follows the first element,
and both are children of the same parent element.*/
.adjacent li:first-of-type + li {
  color: red;
}

/* The general sibling combinator (~) separates two selectors and matches the second element only if it follows
the first element (though not necessarily immediately), and both are children of the same parent element.*/
p ~ span {
  color: red;
}

span {
  background-color: white;
}

/* The child combinator (>) is placed between two CSS selectors.
It matches only those elements matched by the second selector that are the children
of elements matched by the first.*/

.child-combinator > span {
  background-color: DodgerBlue;
}
